<?xml version="1.0" encoding="UTF-8"?>
<!--
       Copyright 2015-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<xs:schema xmlns="http://www.dbvisitor.net/schema/dbvisitor-mapper"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.dbvisitor.net/schema/dbvisitor-mapper"
           elementFormDefault="qualified">

    <xs:simpleType name="boolean_type">
        <xs:restriction base="xs:token">
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="statementType_type">
        <xs:restriction base="xs:token">
            <xs:enumeration value="STATEMENT"/>
            <xs:enumeration value="PREPARED"/>
            <xs:enumeration value="CALLABLE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="resultSetType_type">
        <xs:restriction base="xs:token">
            <xs:enumeration value="FORWARD_ONLY"/>
            <xs:enumeration value="SCROLL_INSENSITIVE"/>
            <xs:enumeration value="SCROLL_SENSITIVE"/>
            <xs:enumeration value="DEFAULT"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- element -->
    <xs:element name="mapper">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="resultMap"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="entity"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="sql"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="execute"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="insert"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="update"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="delete"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="select"/>
            </xs:choice>
            <xs:attribute name="namespace"/>
            <xs:attribute name="caseInsensitive" type="boolean_type"/>
            <xs:attribute name="mapUnderscoreToCamelCase" type="boolean_type"/>
            <xs:attribute name="autoMapping" type="boolean_type"/>
            <xs:attribute name="useDelimited" type="boolean_type"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="resultMap">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="result" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="column" use="required"/>
                        <xs:attribute name="property" use="required"/>
                        <xs:attribute name="javaType"/>
                        <xs:attribute name="jdbcType"/>
                        <xs:attribute name="typeHandler"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="id"/>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="caseInsensitive" type="boolean_type"/>
            <xs:attribute name="mapUnderscoreToCamelCase" type="boolean_type"/>
            <xs:attribute name="autoMapping" type="boolean_type"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="entity">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" minOccurs="0" maxOccurs="unbounded" type="mapping_type_always_nonnull"/>
                <xs:element name="mapping" minOccurs="0" maxOccurs="unbounded" type="mapping_type"/>
                <xs:element name="index" minOccurs="0" maxOccurs="unbounded" type="index_type"/>
            </xs:sequence>
            <xs:attribute name="id"/>
            <xs:attribute name="catalog"/>
            <xs:attribute name="schema"/>
            <xs:attribute name="table"/>
            <xs:attribute name="type" use="required"/>
            <xs:attribute name="autoMapping" type="boolean_type"/>
            <xs:attribute name="useDelimited" type="boolean_type"/>
            <xs:attribute name="mapUnderscoreToCamelCase" type="boolean_type"/>
            <xs:attribute name="caseInsensitive" type="boolean_type"/>
            <xs:attribute name="character-set"/>
            <xs:attribute name="collation"/>
            <xs:attribute name="comment"/>
            <xs:attribute name="other"/>
            <xs:attribute name="ddlAuto">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="none"/>
                        <xs:enumeration value="create"/>
                        <xs:enumeration value="add"/>
                        <xs:enumeration value="update"/>
                        <xs:enumeration value="create-drop"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="mapping_type_always_nonnull">
        <xs:attribute name="column" use="required"/>
        <xs:attribute name="property" use="required"/>
        <xs:attribute name="javaType"/>
        <xs:attribute name="jdbcType"/>
        <xs:attribute name="typeHandler"/>
        <xs:attribute name="keyType"/>
        <xs:attribute name="insert" type="boolean_type"/>
        <xs:attribute name="update" type="boolean_type"/>
        <xs:attribute name="selectTemplate"/>
        <xs:attribute name="insertTemplate"/>
        <xs:attribute name="setColTemplate"/>
        <xs:attribute name="setValueTemplate"/>
        <xs:attribute name="whereColTemplate"/>
        <xs:attribute name="whereValueTemplate"/>
        <xs:attribute name="groupByColTemplate"/>
        <xs:attribute name="orderByColTemplate"/>
        <!-- META -->
        <xs:attribute name="sqlType"/>
        <xs:attribute name="length"/>
        <xs:attribute name="precision"/>
        <xs:attribute name="scale"/>
        <xs:attribute name="character-set"/>
        <xs:attribute name="collation"/>
        <xs:attribute name="default"/>
        <xs:attribute name="comment"/>
        <xs:attribute name="other"/>
    </xs:complexType>

    <xs:complexType name="mapping_type">
        <xs:attribute name="column" use="required"/>
        <xs:attribute name="property" use="required"/>
        <xs:attribute name="javaType"/>
        <xs:attribute name="jdbcType"/>
        <xs:attribute name="typeHandler"/>
        <xs:attribute name="keyType"/>
        <xs:attribute name="insert" type="boolean_type"/>
        <xs:attribute name="update" type="boolean_type"/>
        <xs:attribute name="selectTemplate"/>
        <xs:attribute name="insertTemplate"/>
        <xs:attribute name="setColTemplate"/>
        <xs:attribute name="setValueTemplate"/>
        <xs:attribute name="whereColTemplate"/>
        <xs:attribute name="whereValueTemplate"/>
        <xs:attribute name="groupByColTemplate"/>
        <xs:attribute name="orderByColTemplate"/>
        <!-- META -->
        <xs:attribute name="sqlType"/>
        <xs:attribute name="length"/>
        <xs:attribute name="precision"/>
        <xs:attribute name="scale"/>
        <xs:attribute name="character-set"/>
        <xs:attribute name="collation"/>
        <xs:attribute name="nullable" type="boolean_type"/>
        <xs:attribute name="default"/>
        <xs:attribute name="comment"/>
        <xs:attribute name="other"/>
    </xs:complexType>

    <xs:complexType name="index_type">
        <xs:sequence>
            <xs:element name="column" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" use="required"/>
        <xs:attribute name="columns"/>
        <xs:attribute name="unique" type="boolean_type"/>
        <xs:attribute name="comment"/>
        <xs:attribute name="other"/>
    </xs:complexType>

    <xs:element name="insert">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="selectKey"/>
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
            <xs:attribute name="useGeneratedKeys" type="boolean_type"/>
            <xs:attribute name="keyProperty"/>
            <xs:attribute name="keyColumn"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="update">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="delete">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="execute">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="select">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
            <xs:attribute name="resultMap"/>
            <xs:attribute name="resultType"/>
            <xs:attribute name="fetchSize"/>
            <xs:attribute name="resultSetType" type="resultSetType_type"/>
            <xs:attribute name="bindOut"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="sql">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="id" use="required"/>
        </xs:complexType>
    </xs:element>

    <!-- Dynamic -->
    <xs:element name="selectKey">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="statementType" type="statementType_type"/>
            <xs:attribute name="timeout"/>
            <xs:attribute name="fetchSize"/>
            <xs:attribute name="resultSetType"/>
            <xs:attribute name="keyProperty" use="required"/>
            <xs:attribute name="keyColumn" use="required"/>
            <xs:attribute name="order">
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="BEFORE"/>
                        <xs:enumeration value="AFTER"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="resultType"/>
            <xs:attribute name="resultHandler"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="include">
        <xs:complexType>
            <xs:attribute name="refid" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="trim">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="prefix"/>
            <xs:attribute name="prefixOverrides"/>
            <xs:attribute name="suffix"/>
            <xs:attribute name="suffixOverrides"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="where">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="set">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="foreach">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="collection" use="required"/>
            <xs:attribute name="item" use="required"/>
            <xs:attribute name="index"/>
            <xs:attribute name="open"/>
            <xs:attribute name="close"/>
            <xs:attribute name="separator"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="choose">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="when"/>
                <xs:element minOccurs="0" ref="otherwise"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="when">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="test" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="otherwise">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="if">
        <xs:complexType mixed="true">
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="include"/>
                <xs:element ref="trim"/>
                <xs:element ref="where"/>
                <xs:element ref="set"/>
                <xs:element ref="foreach"/>
                <xs:element ref="choose"/>
                <xs:element ref="if"/>
                <xs:element ref="bind"/>
            </xs:choice>
            <xs:attribute name="test" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="bind">
        <xs:complexType>
            <xs:attribute name="name" use="required"/>
            <xs:attribute name="value" use="required"/>
        </xs:complexType>
    </xs:element>
</xs:schema>